---
import Header from '../components/molecules/Header.svelte';
import Footer from '../components/molecules/Footer.svelte';
import WhiteBackground from '../components/atoms/WhiteBackground.svelte';
import Container from '../components/atoms/Container.svelte';
import Services from '../components/molecules/Services.svelte';
import Quote from '../components/molecules/Quote.svelte';
import ScreenTransition from '../components/atoms/ScreenTransition.svelte';

import fetchData from '../helpers/fetchData';
import siteQuery from '../queries/site';
import query from '../queries/services';

const siteData = await fetchData(fetch, siteQuery);
const { headers, footers } = siteData;
let { menu } = siteData;

menu = menu.sort((a, b) => a.order - b.order);

const header = headers[0];
const footer = footers[0];
let title = 'Services - Abell Design';

const data = (await fetchData(fetch, query)) || { services: [], servicesPages: [{}] };

if (data && data.services) {
    data.services = data.services.map((service, index) => {
        service.oddEven = index % 2;
        return service;
    });
} else {
    data.services = [];
}

const {services, servicesPages} = data;
const quote = servicesPages[0].quote;
const quoter = servicesPages[0].quoter;
---
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Libre+Baskerville&display=swap" rel="stylesheet"> 
    <link rel="stylesheet" href="/style/global.css">
    <script src="https://unpkg.com/@barba/core"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.7.1/gsap.min.js"></script>
</head>
<body>
<div data-barba="wrapper">
<div data-barba="container">
    <WhiteBackground>
        <Header client:load {header} {menu} />

        <Container>
	<Services title="Services" data={services} slugPrefix="/work" linkText="" />
	<Quote {quote} {quoter} />
        </Container>
    </WhiteBackground>

    <Footer footer={footer} />
</div>
</div>

    <ScreenTransition />
    <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

        ga('create', 'UA-102804990-2', 'auto');
        ga('send', 'pageview');
    </script>

    <script>
    const loader = document.querySelector('.loader');
    function loaderIn() {
    // GSAP tween to stretch the loading screen across the whole screen
    return gsap.fromTo(loader,
        {
            rotation: 10,
            scaleX: 0,
            xPercent: -5
        },
        {
            duration: 0.4,
            xPercent: 0,
            scaleX: 1,
            rotation: 0,
            ease: 'power4.inOut',
            transformOrigin: 'left center'
        });
}

function loaderAway() {
    // GSAP tween to hide loading screen
    return gsap.to(loader, {
        duration: 0.4,
        scaleX: 0,
        xPercent: 5,
        rotation: -10,
        transformOrigin: 'right center',
        ease: 'power4.inOut'
    });
}

barba.init({
    transitions: [{
        async leave() {
            await loaderIn();
        },
        enter() {
            loaderAway();
        }
    }]
});

barba.hooks.enter(() => {
    window.scrollTo(0, 0);
});

gsap.set(loader, {
    scaleX: 0,
    rotation: 10,
    xPercent: -5,
    yPercent: -50,
    transformOrigin: 'left center',
    autoAlpha: 1
});</script>
</body>
</html>
